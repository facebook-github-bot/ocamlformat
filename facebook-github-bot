
facebook-github-bot
/
formato ocaml
P√∫blico
bifurcado de ocaml-ppx/ocamlformat
Formateador autom√°tico para c√≥digo OCaml

Licencia
 licencia MIT
 34 estrellas 148 tenedores 
C√≥digo
Solicitudes de extracci√≥n
1
Comportamiento
Proyectos
Seguridad
Perspectivas
facebook-github-bot/ocamlformat
Esta rama tiene 300 confirmaciones detr√°s de ocaml-ppx:main .
√öltima confirmaci√≥n
@gpetiot
gpetiot
‚Ä¶
el 2 de septiembre de 2021
Estad√≠sticas de Git
archivos
L√âAME.md
Estado de construcci√≥n

Formato OCaml
OCamlFormat es una herramienta para formatear c√≥digo OCaml.

OCamlFormat funciona analizando el c√≥digo fuente utilizando el analizador est√°ndar del compilador OCaml, decidiendo d√≥nde colocar los comentarios en el √°rbol de an√°lisis y escribiendo el √°rbol de an√°lisis y los comentarios en un estilo coherente.

Consulte el c√≥digo fuente de OCamlFormat e Infer para ver ejemplos de los estilos de c√≥digo que produce.

Tabla de contenido
Preguntas frecuentes para nuevos usuarios
Caracter√≠sticas
Descripci√≥n general
Estilo de c√≥digo
Opciones
Instalaci√≥n
Configuraci√≥n del editor
Configuraci√≥n de Emacs
configuraci√≥n vim
Documentaci√≥n
Comunidad
Licencia
Preguntas frecuentes para nuevos usuarios
¬°Hola, nuevo usuario! ¬°Bienvenidos!üëã

Si est√° aqu√≠, probablemente est√© interesado en usar una herramienta de formato para su c√≥digo base, de modo que no tenga que preocuparse por formatearlo a mano y acelerar la revisi√≥n del c√≥digo centr√°ndose en las partes importantes.

¬°OCamlFormat es probablemente lo que buscas! Pero hay algunas cosas que debe saber antes de formatear todas las cosas.

¬øDebo usar OCamlFormat?
OCamlFormat ya est√° siendo utilizado por varios proyectos, pero viene con algunas advertencias importantes. Estas preguntas frecuentes deber√≠an ayudarlo a decidir si puede funcionar para usted.

OCamlFormat es un software beta. Si bien no seguimos a SemVer , esperamos que el programa cambie considerablemente antes de llegar a la versi√≥n 1.0.0. En particular, actualizar el ocamlformatpaquete har√° que su programa se vuelva a formatear. A veces es relativamente indoloro, pero a veces har√° una diferencia en casi todos los archivos. Este puede ser un precio dif√≠cil de pagar, ya que significa perder el historial de git correspondiente.

Si usa una configuraci√≥n personalizada, es posible que las opciones en las que conf√≠a tambi√©n se eliminen en una versi√≥n posterior.

Adem√°s, si adopta OCamlFormat en un proyecto, no interrumpir√° su flujo de trabajo en sus otros proyectos. De hecho, OCamlFormat modifica un archivo solo si puede encontrar un .ocamlformatarchivo, por lo que agregar un gancho para guardar en su editor solo simplificar√° su flujo de trabajo en proyectos que usan OCamlFormat.

¬øQu√© configuraci√≥n debo usar?
La forma recomendada es utilizar un perfil predeterminado versionado, como:

version=0.19.0
(o reemplazar con la salida de ocamlformat --version)

Esto asegura dos cosas:

est√° utilizando la configuraci√≥n de formato predeterminada.
la versi√≥n que usa para formatear est√° grabada en alguna parte. Si alguien m√°s que trabaja en el proyecto intenta usar una versi√≥n diferente, ver√° un mensaje de error en lugar de reformatear todo el proyecto de una manera diferente.
¬øPuede OCamlFormat admitir mi estilo?
No. Es mejor ver OCamlFormat como una herramienta para aplicar un estilo, en lugar de una herramienta modificable para aplicar su estilo existente. Hay algunas perillas que puede girar, como anular marginpara determinar el ancho de l√≠nea m√°ximo. Pero es mejor no establecer opciones individuales para anular lo que est√° haciendo el perfil predeterminado.

Para citar (y sed) la p√°gina de Prettier sobre la filosof√≠a de las opciones :

OCamlFormat tiene algunas opciones debido a la historia. Pero no queremos m√°s de ellos.

Con mucho, la principal raz√≥n para adoptar OCamlFormat es detener todos los debates en curso sobre los estilos.

Cuantas m√°s opciones tiene OCamlFormat, m√°s se aleja del objetivo anterior. Los debates sobre estilos simplemente se convierten en debates sobre qu√© opciones de OCamlFormat usar.

¬øC√≥mo deshabilitar localmente OCamlFormat?
Para deshabilitar el formato de un elemento de nivel superior espec√≠fico, debe adjuntar un [@@ocamlformat "option=VAL"]atributo a este elemento en el archivo procesado, como:

let do_not_touch
    (x : t)
      (y : t)
        (z : t) = [
  x; y; z
] [@@ocamlformat "disable"]
Para deshabilitar el formato de una expresi√≥n espec√≠fica, debe adjuntar un [@ocamlformat "option=VAL"]atributo a esta expresi√≥n en el archivo procesado, como:

let do_not_touch (x : t) (y : t) (z : t) = [
  x; y; z
] [@ocamlformat "disable"]
Para deshabilitar un archivo completo, la forma preferida es agregar el nombre del archivo a un .ocamlformat-ignorearchivo local. Un .ocamlformat-ignorearchivo especifica archivos que OCamlFormat debe ignorar. Cada l√≠nea de un .ocamlformat-ignorearchivo especifica un nombre de archivo relativo al directorio que contiene el .ocamlformat-ignorearchivo. Se admiten expresiones regulares de estilo shell. Las l√≠neas que comienzan con #se ignoran y se pueden usar como comentarios.

Caracter√≠sticas
Descripci√≥n general
OCamlFormat requiere un c√≥digo fuente que cumpla con las siguientes condiciones:

No activa la advertencia 50 ("Comentario de documentaci√≥n inesperado"). Para el c√≥digo que activa la advertencia 50, es poco probable que OCamlFormat conserve la cadena de documentaci√≥n adjunta.

Analiza sin ning√∫n procesamiento previo, utilizando la versi√≥n del analizador est√°ndar OCaml (no camlp4) que se usa para compilar OCamlFormat. Los atributos y los puntos de extensi√≥n deben conservarse correctamente, pero otros mecanismos como camlp4, cppo, etc. no funcionar√°n.

Es una implementaci√≥n de m√≥dulo ( .ml), una interfaz ( .mli) o una secuencia de frases de alto nivel ( .mlt). Los archivos de dunas en la sintaxis de OCaml tambi√©n funcionan.

Bajo esas condiciones, se espera que OCamlFormat produzca una salida equivalente a la entrada. Como control de seguridad en caso de errores, antes de finalizar o modificar cualquier archivo de entrada, OCamlFormat aplica los siguientes controles:

Los √°rboles de an√°lisis obtenidos al analizar los archivos originales y formateados son iguales, salvo por alguna normalizaci√≥n menor (ver ).Normalize.equal

Las cadenas de documentaci√≥n y sus archivos adjuntos se han conservado (impl√≠cito en la comprobaci√≥n del √°rbol de an√°lisis).

El conjunto de comentarios en los archivos originales y formateados es el mismo hasta su ubicaci√≥n.

Estilo de c√≥digo
Hay una serie de perfiles de estilo de c√≥digo preestablecidos, seleccionados mediante la --profileopci√≥n pasando --profile=<name>la l√≠nea de comando o agregando profile = <name>a un archivo de configuraci√≥n .ocamlformat. Cada perfil es una colecci√≥n de configuraciones para todas las opciones, anulando la configuraci√≥n de menor prioridad de las opciones individuales. Por lo tanto, se puede seleccionar un perfil y luego se pueden anular las opciones individuales si se desea.

El perfil conventionalo defaultpretende ser tan familiar y "convencional" como lo permitan las opciones disponibles.

El ocamlformatperfil tiene como objetivo aprovechar las ventajas de un formateador autom√°tico basado en √°rboles de traducci√≥n y limitar las consecuencias de las debilidades impuestas por la implementaci√≥n actual. Este es un estilo que optimiza lo que el formateador puede hacer mejor, en lugar de coincidir con el estilo de cualquier c√≥digo existente. En lugar de familiaridad, la atenci√≥n se centra en la legibilidad, manteniendo los casos comunes razonablemente compactos mientras se intenta evitar el formato confuso en los casos de esquina. Las pautas generales que han dirigido el dise√±o incluyen:

La legibilidad, en el sentido de hacer lo m√°s dif√≠cil posible que un an√°lisis visual r√°pido d√© una interpretaci√≥n incorrecta, es de m√°xima prioridad;

Siempre que sea posible, la estructura de alto nivel del c√≥digo debe ser obvia mirando solo el margen izquierdo, en particular, no debe ser necesario saltar visualmente de izquierda a derecha buscando palabras clave cr√≠ticas, tokens, etc.

Se prefiere el c√≥digo compacto igual a todo lo dem√°s, ya que la lectura sin desplazamiento es m√°s f√°cil, por lo que se evitan las sangr√≠as o los espacios en blanco a menos que ayuden a la legibilidad;

Se ha prestado atenci√≥n a hacer que algunas trampas sint√°cticas sean visualmente obvias.

El compactperfil es similar ocamlformatpero opta por un estilo de c√≥digo generalmente m√°s compacto.

El sparseperfil es similar ocamlformatpero opta por un estilo de c√≥digo generalmente m√°s escaso.

Si no se selecciona ning√∫n perfil, conventionalse utiliza uno.

Opciones
La documentaci√≥n completa de las opciones est√° disponible en [ocamlformat-help.txt] ya trav√©s de ocamlformat --help. Las opciones se pueden modificar mediante:

un archivo de configuraci√≥n .ocamlformat con una option = VALl√≠nea
usando la OCAMLFORMATvariable de entorno:OCAMLFORMAT=option=VAL,...,option=VAL
un par√°metro opcional en la l√≠nea de comando
un atributo global [@@@ocamlformat "option=VAL"]en el archivo procesado
un [@@ocamlformat "option=VAL"]atributo en una expresi√≥n en el archivo procesado
Se utilizan archivos .ocamlformat en los directorios contenedor y todos los ancestros para cada archivo de entrada, as√≠ como el archivo global .ocamlformat definido en $XDG_CONFIG_HOME/ocamlformat. El archivo global .ocamlformat tiene la prioridad m√°s baja, entonces cuanto m√°s cerca est√© el directorio del archivo procesado, mayor ser√° la prioridad.

Cuando la opci√≥n --enable-outside-detected-projectno est√° configurada, los archivos .ocamlformat fuera del proyecto (incluido el que est√° en XDG_CONFIG_HOME) no se leen. La ra√≠z del proyecto de un archivo de entrada se toma como el directorio principal m√°s cercano que contiene un archivo .git o .hg o dune-project. Si no se encuentra ning√∫n archivo de configuraci√≥n, el formateo est√° deshabilitado.

Un .ocamlformat-ignorearchivo especifica archivos que OCamlFormat debe ignorar. Cada l√≠nea de un .ocamlformat-ignorearchivo especifica un nombre de archivo relativo al directorio que contiene el .ocamlformat-ignorearchivo. Las l√≠neas que comienzan con #se ignoran y se pueden usar como comentarios.

Instalaci√≥n
OCamlFormat se puede instalar con opam:

opam install ocamlformat
Alternativamente, consulte ocamlformat.opamlas instrucciones de compilaci√≥n manual.

Configuraci√≥n del editor
Deshabilitar proyecto externo
Como se mencion√≥ en la secci√≥n Opciones, cuando la opci√≥n --disable-outside-detected-projectest√° configurada, los archivos .ocamlformat fuera del proyecto (incluido el que est√° en XDG_CONFIG_HOME) no se leen. La ra√≠z del proyecto de un archivo de entrada se toma como el directorio principal m√°s cercano que contiene un archivo .git o .hg o dune-project. Si no se encuentra ning√∫n archivo de configuraci√≥n, el formateo est√° deshabilitado.

Esta funci√≥n suele ser el comportamiento que puede esperar de OCamlFormat cuando se ejecuta directamente desde su editor de texto, por lo que se recomienda utilizar esta opci√≥n.

Configuraci√≥n de Emacs
a√±adir $(opam config var share)/emacs/site-lispa load-path(como hecho por opam user-setup install)

a√±adir (require 'ocamlformat)a.emacs

Opcionalmente, agregue lo siguiente para .emacsenlazar C-M-<tab>con el comando ocamlformat e instale un enlace para ejecutar ocamlformat al guardar:

(add-hook 'tuareg-mode-hook (lambda ()
  (define-key tuareg-mode-map (kbd "C-M-<tab>") #'ocamlformat)
  (add-hook 'before-save-hook #'ocamlformat-before-save)))
Para pasar la opci√≥n --disable-outside-detected-project(o --disable) a OCamlFormat:

correremacs
corre M-x customize-group‚èéluego entraocamlformat‚èé
seleccione el elemento Habilitar formato Ocaml
seleccione el modo OCamlformat en el men√∫ de valores: Enable(por defecto), DisableoDisable outside detected project
guardar el b√∫fer ( C-x C-s), luego entrar yes‚èéy salir
Se pueden configurar otras opciones de OCamlFormat en los archivos de configuraci√≥n .ocamlformat.

Con paquete de uso
Una configuraci√≥n b√°sica con use-package :

(use-package ocamlformat
  :custom (ocamlformat-enable 'enable-outside-detected-project)
  :hook (before-save . ocamlformat-before-save)
  )
A veces, necesita tener un modificador para OCamlFormat (debido a conflictos de versi√≥n o porque no desea instalarlo en todos los modificadores, por ejemplo). Teniendo en cuenta que su interruptor OCamlFormat se llama ocamlformat:

(use-package ocamlformat
  :load-path
  (lambda ()
    (concat
         ;; Never use "/" or "\" since this is not portable (opam-user-setup does this though)
         ;; Always use file-name-as-directory since this will append the correct separator if needed
         ;; (or use a package that does it well like https://github.com/rejeep/f.el)
         ;; This is the verbose and not package depending version:
         (file-name-as-directory
          ;; Couldn't find an option to remove the newline so a substring is needed
          (substring (shell-command-to-string "opam config var share --switch=ocamlformat --safe") 0 -1))
         (file-name-as-directory "emacs")
         (file-name-as-directory "site-lisp")))
  :custom
  (ocamlformat-enable 'enable-outside-detected-project)
  (ocamlformat-command
   (concat
    (file-name-as-directory
     (substring (shell-command-to-string "opam config var bin --switch=ocamlformat --safe") 0 -1))
    "ocamlformat"))
  :hook (before-save . ocamlformat-before-save)
  )
(Observe el :custompara personalizar el binario OCamlFormat)

Esto podr√≠a simplificarse (definiendo una variable elisp correspondiente al prefijo switch al cargar tuareg, por ejemplo), pero permite tener una configuraci√≥n completa en un solo lugar, lo que a menudo es menos propenso a errores.

configuraci√≥n vim
aseg√∫rese de que el ocamlformatbinario se pueda encontrar en PATH

instalar el plugin de Neoformato

Opcional: Puedes cambiar las opciones pasadas a OCamlFormat (para usar la opci√≥n --disable-outside-detected-projectpor ejemplo), puedes personalizar NeoFormat con:

let g:opambin = substitute(system('opam config var bin'),'\n$','','''')
let g:neoformat_ocaml_ocamlformat = {
            \ 'exe': g:opambin . '/ocamlformat',
            \ 'no_append': 1,
            \ 'stdin': 1,
            \ 'args': ['--disable-outside-detected-project', '--name', '"%:p"', '-']
            \ }

let g:neoformat_enabled_ocaml = ['ocamlformat']
Documentaci√≥n
OCamlFormat est√° documentado en su p√°gina de manual y a trav√©s de su ayuda interna:

ocamlformat --help
man ocamlformat
Tambi√©n puede verlo en l√≠nea .

Raz√≥n
OCamlFormat est√° influenciado y sigue el mismo dise√±o b√°sico que refmtReason , pero genera OCaml en lugar de Reason.

Esta herramienta no puede tratar directamente con el c√≥digo Reason ( archivos *.re/ *.rei), pero es posible convertir primero estos archivos a la sintaxis OCaml utilizando refmt -p mly luego ejecutar ocamlformatesta salida.

Comunidad
foro: https://discuss.ocaml.org/tags/ocamlformat
github: https://github.com/ocaml-ppx/ocamlformat
problemas: https://github.com/ocaml-ppx/ocamlformat/issues
Vea CONTRIBUYENDO para saber c√≥mo ayudar.

Licencia
OCamlFormat tiene licencia MIT .
